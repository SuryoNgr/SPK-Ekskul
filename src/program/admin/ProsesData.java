/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package program.admin;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.HashMap;
import java.util.LinkedList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author Fattahul_Akbar
 */
public class ProsesData extends javax.swing.JFrame {
    
    DefaultTableModel tabelDataMahasiswa;
    DefaultTableModel tabelNormalisasi;
    DefaultTableModel tabelPeringkat;
    
    koneksi conn= new koneksi();

    /**
     * Creates new form ProsesData
     */
    public ProsesData() {
        initComponents();
        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setLocationRelativeTo(this);
        datatable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabel_mahasiswa = new javax.swing.JTable();
        btn_peringkat = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        tabel_peringkat = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabel_normalisasi = new javax.swing.JTable();
        btn_normalisasi = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        btn_kesimpulan = new javax.swing.JButton();
        btnctk = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel2.setBackground(new java.awt.Color(204, 204, 255));
        jPanel2.setLayout(null);

        tabel_mahasiswa.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tabel_mahasiswa);

        jPanel2.add(jScrollPane1);
        jScrollPane1.setBounds(50, 240, 434, 204);

        btn_peringkat.setText("Tentukan Peringkat");
        btn_peringkat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_peringkatActionPerformed(evt);
            }
        });
        jPanel2.add(btn_peringkat);
        btn_peringkat.setBounds(530, 450, 140, 33);

        tabel_peringkat.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(tabel_peringkat);

        jPanel2.add(jScrollPane3);
        jScrollPane3.setBounds(50, 490, 452, 204);

        jLabel2.setFont(new java.awt.Font("Trebuchet MS", 1, 18)); // NOI18N
        jLabel2.setText("TABEL PERINGKAT");
        jPanel2.add(jLabel2);
        jLabel2.setBounds(50, 460, 152, 21);

        tabel_normalisasi.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(tabel_normalisasi);

        jPanel2.add(jScrollPane2);
        jScrollPane2.setBounds(710, 260, 434, 204);

        btn_normalisasi.setText("Normalisasikan");
        btn_normalisasi.setMaximumSize(new java.awt.Dimension(125, 23));
        btn_normalisasi.setMinimumSize(new java.awt.Dimension(125, 23));
        btn_normalisasi.setPreferredSize(new java.awt.Dimension(125, 23));
        btn_normalisasi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_normalisasiActionPerformed(evt);
            }
        });
        jPanel2.add(btn_normalisasi);
        btn_normalisasi.setBounds(530, 400, 140, 41);

        jLabel3.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel3.setText("NORMALISASI");
        jPanel2.add(jLabel3);
        jLabel3.setBounds(520, 50, 180, 22);

        btn_kesimpulan.setText("KESIMPULAN");
        btn_kesimpulan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_kesimpulanActionPerformed(evt);
            }
        });
        jPanel2.add(btn_kesimpulan);
        btn_kesimpulan.setBounds(820, 500, 200, 59);

        btnctk.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/print.jpg"))); // NOI18N
        btnctk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnctkActionPerformed(evt);
            }
        });
        jPanel2.add(btnctk);
        btnctk.setBounds(550, 510, 100, 60);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/pngwing.com (1)5.png"))); // NOI18N
        jPanel2.add(jLabel1);
        jLabel1.setBounds(-30, 110, 1190, 620);

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/pngwing.com (3).png"))); // NOI18N
        jPanel2.add(jLabel4);
        jLabel4.setBounds(30, 80, 1150, 650);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 1158, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 730, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btn_peringkatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_peringkatActionPerformed
        // TODO add your handling code here:
        cariperingkat();
    }//GEN-LAST:event_btn_peringkatActionPerformed

    private void btn_normalisasiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_normalisasiActionPerformed
        // TODO add your handling code here:
        normalisasi();
    }//GEN-LAST:event_btn_normalisasiActionPerformed

    private void btn_kesimpulanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_kesimpulanActionPerformed
        // TODO add your handling code here:
        kesimpulan kesimpulan_ = new kesimpulan();
        kesimpulan_.setVisible(true);
    }//GEN-LAST:event_btn_kesimpulanActionPerformed

    private void btnctkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnctkActionPerformed
try {
        String path = "./src/laporan/reporthasil.jasper";
        HashMap<String, Object> parameter = new HashMap<>();
        Connection conn = koneksi.getconnetion(); // Gunakan metode yang ada di kelas koneksi

        JasperPrint print = JasperFillManager.fillReport(path, parameter, conn);
        JasperViewer.viewReport(print, false);

    } catch (Exception ex) {
        JOptionPane.showMessageDialog(rootPane, "Dokumen tidak ada: " + ex.getMessage());
    }
    }//GEN-LAST:event_btnctkActionPerformed
    
   protected void datatable() {
    DefaultTableModel tabmode = new DefaultTableModel();
    Object[] baris = {"Nama", "Nama Ekskul", "Minat", "Bakat", "Prestasi", "Dukungan Orang Tua"};
    tabmode.setColumnIdentifiers(baris);
    
    try {
        
       

        String sql = "SELECT * FROM tbl_kriteria ";
        PreparedStatement stat = conn.getconnetion().prepareStatement(sql);
        ResultSet hasil = stat.executeQuery();

        while (hasil.next()) {
            tabmode.addRow(new Object[]{
                hasil.getString("nama"),
                hasil.getString("R"),
                hasil.getString("c1"),
                hasil.getString("c2"),
                hasil.getString("c3"),
                hasil.getString("c4")
            });
        }

        tabel_mahasiswa.setModel(tabmode);  // Set model tabel dengan data baru

    } catch (SQLException e) {
        e.printStackTrace();
        JOptionPane.showMessageDialog(null, "Data gagal dipanggil: " + e.getMessage());
    }
}
    
    public void tabelModelNormalisasi(){
       tabelNormalisasi = new DefaultTableModel();
       tabelNormalisasi.addColumn("Nama");
       tabelNormalisasi.addColumn("Nama Ekskul");
       tabelNormalisasi.addColumn("Minat");
       tabelNormalisasi.addColumn("Bakat");
       tabelNormalisasi.addColumn("Prestasi");
       tabelNormalisasi.addColumn("Dukungan Orang Tua");
       tabel_normalisasi.setModel(tabelNormalisasi);
    }
    
    public void tabelmodelPeringkat() {
    try {
        tabelPeringkat = new DefaultTableModel();
        tabelPeringkat.addColumn("Nama");
        tabelPeringkat.addColumn("Nama Ekskul");
        tabelPeringkat.addColumn("Nilai");
        tabelPeringkat.addColumn("Peringkat");
        
        tabel_peringkat.setModel(tabelPeringkat);
        ResultSet res = conn.ambilData("SELECT * FROM tbl_peringkat ORDER BY nilai DESC");
        int peringkat = 1;
        while (res.next()) {
            tabelPeringkat.addRow(new Object[]{
                res.getString("nama"), 
                res.getString("nama_ekskul"), 
                res.getFloat("nilai"), 
                peringkat
            });
            peringkat++;
        }
    } catch (SQLException ex) {
        Logger.getLogger(ProsesData.class.getName()).log(Level.SEVERE, null, ex);
    }
}



public void cariperingkat() {
    try {
        LinkedList<Float> bobot = new LinkedList<>();
        ResultSet res3 = conn.ambilData("SELECT * FROM tbl_bobot");
        tabelmodelPeringkat();
        
        while (res3.next()) {
            bobot.add(res3.getFloat("b1"));
            bobot.add(res3.getFloat("b2"));
            bobot.add(res3.getFloat("b3"));
            bobot.add(res3.getFloat("b4"));
        }
        
        String deleteSql = "DELETE FROM tbl_peringkat";
        conn.simpanData(deleteSql);
        
        for (int x = 0; x < tabel_normalisasi.getRowCount(); x++) {
            String nama = tabel_normalisasi.getValueAt(x, 0).toString();
            String namaEkskul = tabel_normalisasi.getValueAt(x, 1).toString();
            float r1 = Float.parseFloat(tabel_normalisasi.getValueAt(x, 2).toString()) * bobot.get(0);
            float r2 = Float.parseFloat(tabel_normalisasi.getValueAt(x, 3).toString()) * bobot.get(1);
            float r3 = Float.parseFloat(tabel_normalisasi.getValueAt(x, 4).toString()) * bobot.get(2);
            float r4 = Float.parseFloat(tabel_normalisasi.getValueAt(x, 5).toString()) * bobot.get(3);
            float nilai = r1 + r2 + r3 + r4;
            
            String insertSql = "INSERT INTO tbl_peringkat (nama, nama_ekskul, nilai, peringkat) VALUES (?, ?, ?, ?)";
            PreparedStatement pstmt = conn.getconnetion().prepareStatement(insertSql);
            pstmt.setString(1, nama);
            pstmt.setString(2, namaEkskul);
            pstmt.setFloat(3, nilai);
            pstmt.setInt(4, 0); // Sementara atur peringkat ke 0
            pstmt.executeUpdate();
        }
        
        ResultSet res4 = conn.ambilData("SELECT * FROM tbl_peringkat ORDER BY nilai DESC");
        int peringkat = 1;
        while (res4.next()) {
            String updateSql = "UPDATE tbl_peringkat SET peringkat = ? WHERE nama = ? AND nama_ekskul = ?";
            PreparedStatement pstmt = conn.getconnetion().prepareStatement(updateSql);
            pstmt.setInt(1, peringkat);
            pstmt.setString(2, res4.getString("nama"));
            pstmt.setString(3, res4.getString("nama_ekskul"));
            pstmt.executeUpdate();
            peringkat++;
        }
        
        tabelmodelPeringkat();
    } catch (SQLException ex) {
        JOptionPane.showMessageDialog(this, "Terjadi kesalahan: " + ex.getMessage());
        ex.printStackTrace();
    }
}



    
    public void normalisasi() {
    LinkedList<Float> max = new LinkedList<>();
    
    try {
        ResultSet res = conn.ambilData("SELECT MAX(c1) AS maxC1, MAX(c2) AS maxC2, MAX(c3) AS maxC3, MAX(c4) AS maxC4 FROM tbl_kriteria");
        
        if (res.next()) {
            max.add(res.getFloat("maxC1"));
            max.add(res.getFloat("maxC2"));
            max.add(res.getFloat("maxC3"));
            max.add(res.getFloat("maxC4"));
        }
        
        ResultSet res2 = conn.ambilData("SELECT * FROM tbl_kriteria");
        tabelModelNormalisasi();
        
        while (res2.next()) {
            String nama = res2.getString("nama");
            String namaEkskul = res2.getString("R");
            float c1 = res2.getFloat("c1");
            float c2 = res2.getFloat("c2");
            float c3 = res2.getFloat("c3");
            float c4 = res2.getFloat("c4");

            float normC1 = c1 / max.get(0);
            float normC2 = c2 / max.get(1);
            float normC3 = c3 / max.get(2);
            float normC4 = c4 / max.get(3);

            tabelNormalisasi.addRow(new Object[]{nama, namaEkskul, normC1, normC2, normC3, normC4});
        }
    } catch (SQLException ex) {
        JOptionPane.showMessageDialog(this, "Terjadi kesalahan saat menormalisasi data: " + ex.getMessage());
        ex.printStackTrace();
    }
}

    
    public boolean isCellEditable(int row, int column){
        return false;//This causes all cells to be not editable
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ProsesData.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ProsesData.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ProsesData.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ProsesData.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ProsesData().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_kesimpulan;
    private javax.swing.JButton btn_normalisasi;
    private javax.swing.JButton btn_peringkat;
    private javax.swing.JButton btnctk;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable tabel_mahasiswa;
    private javax.swing.JTable tabel_normalisasi;
    private javax.swing.JTable tabel_peringkat;
    // End of variables declaration//GEN-END:variables
}
